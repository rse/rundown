##
##  Rundown - Render Rundown Scripts for Teleprompting
##  Copyright (c) 2023-2025 Dr. Ralf S. Engelschall <rse@engelschall.com>
##  Licensed under GPL 3.0 <https://spdx.org/licenses/GPL-3.0-only>
##

#   [rundown-3-lib] static code analysis (continuous file watching)
lint-watch
    nodemon --exec "npm start lint" --watch src --ext ts

#   [rundown-3-lib] static code analysis
lint
    eslint --config etc/eslint.mjs src/**/*.ts

#   [rundown-3-lib] build components (continuous file watching)
build-watch
    nodemon --exec "npm start build" --watch src --ext ts,1

#   [rundown-3-lib] build components (production mode)
build : build-esm build-umd

#   [rundown-3-lib] build components (development mode)
build:dev : build-esm-dev build-umd-dev

#   [rundown-3-lib] build components (ESM variant)
build-esm
    cross-env VITE_BUILD_FORMATS=esm,cjs vite --config etc/vite.mts build --mode production

#   [rundown-3-lib] build components (ESM variant)
build-esm-dev
    cross-env VITE_BUILD_FORMATS=esm,cjs vite --config etc/vite.mts build --mode development

#   [rundown-3-lib] build components (UMD variant)
build-umd
    cross-env VITE_BUILD_FORMATS=umd     vite --config etc/vite.mts build --mode production

#   [rundown-3-lib] build components (UMD variant)
build-umd-dev
    cross-env VITE_BUILD_FORMATS=umd     vite --config etc/vite.mts build --mode development

#   [rundown-3-lib] remove all development-only NPM dependencies
prune
    npm prune --omit=dev

#   [rundown-3-lib] remove all generated artifacts (reverse of "npm start build")
clean
    shx rm -rf dst-stage1 dst-stage2

#   [rundown-3-lib] remove all generated artifacts (reverse of "npm install" and "npm start build")
clean:dist : clean
    shx rm -f package-lock.json && \
    shx rm -rf node_modules

