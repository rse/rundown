##
##  Rundown - Generate Rundown Scripts for Teleprompting
##  Copyright (c) 2023-2025 Dr. Ralf S. Engelschall <rse@engelschall.com>
##  Licensed under GPL 3.0 <https://spdx.org/licenses/GPL-3.0-only>
##

scripts:
    build:                npm start archive:build docker:build

    "archive:build": >
                          VERSION=`sed -n '/"version":/ s/.*: *"\(.*\)".*/\1/p' ../package.json` &&
                          echo "++ building distribution archives for Rundown $VERSION ++" &&
                          rm -rf dst &&
                          mkdir -p dst/rundown-$VERSION/ &&
                          mkdir -p dst/rundown-$VERSION-win-x64/ &&
                          mkdir -p dst/rundown-$VERSION-mac-x64/ &&
                          mkdir -p dst/rundown-$VERSION-lnx-x64/ &&
                          cp -p ../rundown-doc/rundown-*.docx dst/rundown-$VERSION/ &&
                          cp -p ../rundown-doc/rundown-*.docx dst/rundown-$VERSION-win-x64/ &&
                          cp -p ../rundown-doc/rundown-*.docx dst/rundown-$VERSION-mac-x64/ &&
                          cp -p ../rundown-doc/rundown-*.docx dst/rundown-$VERSION-lnx-x64/ &&
                          cp -p ../rundown-cli/dst-stage2/rundown.js              dst/rundown-$VERSION/rundown-cli.js &&
                          cp -p ../rundown-cli/dst-stage3/rundown-cli-win-x64.exe dst/rundown-$VERSION-win-x64/rundown-cli.exe &&
                          cp -p ../rundown-cli/dst-stage3/rundown-cli-mac-x64     dst/rundown-$VERSION-mac-x64/rundown-cli &&
                          cp -p ../rundown-cli/dst-stage3/rundown-cli-lnx-x64     dst/rundown-$VERSION-lnx-x64/rundown-cli &&
                          cd dst &&
                          zip -9 -r rundown-$VERSION.zip         rundown-$VERSION/ &&
                          zip -9 -r rundown-$VERSION-win-x64.zip rundown-$VERSION-win-x64/ &&
                          zip -9 -r rundown-$VERSION-mac-x64.zip rundown-$VERSION-mac-x64/ &&
                          zip -9 -r rundown-$VERSION-lnx-x64.zip rundown-$VERSION-lnx-x64/

    "docker:build": >
                          mkdir -p dst &&
                          cp -p ../rundown-cli/dst-stage2/rundown.js dst/ &&
                          IMAGE_NAME=engelschall/rundown &&
                          IMAGE_VERSION=`sed -n '/"version":/ s/.*: *"\(.*\)".*/\1/p' ../package.json` &&
                          IMAGE_RELEASE=`date "+%Y%m%d"` &&
                          echo "++ building Docker container image for Rundown $IMAGE_VERSION ($IMAGE_RELEASE) ++" &&
                          docker buildx build \
                              --pull --no-cache --progress plain \
                              -t "$IMAGE_NAME:$IMAGE_VERSION-$IMAGE_RELEASE" \
                              -t "$IMAGE_NAME:$IMAGE_VERSION" \
                              -t "$IMAGE_NAME:latest" \
                              -f etc/docker-build.txt . &&
                          docker image ls "$IMAGE_NAME:$IMAGE_VERSION-$IMAGE_RELEASE"

    "docker:publish": >
                          IMAGE_NAME=engelschall/rundown &&
                          IMAGE_VERSION=`sed -n '/"version":/ s/.*: *"\(.*\)".*/\1/p' ../package.json` &&
                          IMAGE_RELEASE=`date "+%Y%m%d"` &&
                          echo "++ publishing Docker container image for Rundown $IMAGE_VERSION ($IMAGE_RELEASE) ++" &&
                          docker push "$IMAGE_NAME:$IMAGE_VERSION-$IMAGE_RELEASE" &&
                          docker push "$IMAGE_NAME:$IMAGE_VERSION" &&
                          docker push "$IMAGE_NAME:latest"
    "docker:up": >
                          docker compose -f etc/docker-compose.yaml up -d
    "docker:down":  >
                          docker compose -f etc/docker-compose.yaml down

    clean:                shx rm -rf dst-stage1 dst-stage2 dst-stage3
    clean-dist:           npm start clean && shx rm -rf node_modules

