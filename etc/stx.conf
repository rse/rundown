##
##  Rundown - Render Rundown Scripts for Teleprompting
##  Copyright (c) 2023-2025 Dr. Ralf S. Engelschall <rse@engelschall.com>
##  Licensed under GPL 3.0 <https://spdx.org/licenses/GPL-3.0-only>
##

#   [top-level] (internal): just pass-through "npm install" operation
post-install
    npm --prefix rundown-2-rnd install && \
    npm --prefix rundown-3-lib install && \
    npm --prefix rundown-4-web install && \
    npm --prefix rundown-5-cli install && \
    npm --prefix rundown-6-brd install && \
    npm --prefix rundown-7-dst install

#   [top-level] automatically update all NPM dependencies
upd
    npx -y upd && \
    (cd rundown-2-rnd && npx -y upd) && \
    (cd rundown-3-lib && npx -y upd) && \
    (cd rundown-4-web && npx -y upd) && \
    (cd rundown-5-cli && npx -y upd) && \
    (cd rundown-6-brd && npx -y upd) && \
    (cd rundown-7-dst && npx -y upd)

#   [top-level] lint components (full lint)
lint
    npm --prefix rundown-2-rnd start lint && \
    npm --prefix rundown-3-lib start lint && \
    npm --prefix rundown-4-web start lint && \
    npm --prefix rundown-5-cli start lint && \
    npm --prefix rundown-6-brd start lint

#   [top-level] build components for production (full build)
build
    npm --prefix rundown-2-rnd start build && \
    npm --prefix rundown-3-lib start build && \
    npm --prefix rundown-4-web start build && \
    npm --prefix rundown-5-cli start build && \
    npm --prefix rundown-6-brd start build

#   [top-level] (internal): build components for development (partial build only)
build:dev
    npm --prefix rundown-2-rnd start build:dev && \
    npm --prefix rundown-3-lib start build:dev && \
    npm --prefix rundown-4-web start build:dev && \
    npm --prefix rundown-5-cli start build:dev && \
    npm --prefix rundown-6-brd start build:dev

#   [top-level] (internal): build components for development (continuous file watching)
build:dev:watch
    watch "npm start lint build:dev" \
        rundown-2-rnd/src \
        rundown-3-lib/src \
        rundown-4-web/src \
        rundown-5-cli/src \
        rundown-6-brd/src \
        --wait=2 --interval=1

#   [top-level] (internal): run command-line interface for production
run:dev:watch-cli
    wait-on -l "rundown-5-cli/dst-stage2/rundown.js" && \
    cross-env NODE_OPTIONS="--no-warnings --enable-source-maps" \
        nodemon --signal SIGINT -w rundown-5-cli/dst-stage2 --delay 3000ms \
            rundown-5-cli/dst-stage2/rundown.js -- \
            $RUNDOWN_OPTIONS

#   [top-level] (internal): run command-line interface for production
run:dev:watch-bridge
    wait-on -l "rundown-6-brd/dst-stage2/rundown.js" && \
    cross-env NODE_OPTIONS="--no-warnings --enable-source-maps" \
        nodemon --signal SIGINT -w rundown-5-cli/dst-stage2 --delay 3000ms \
            rundown-6-brd/dst-stage2/rundown.js -- \
            $RUNDOWN_BRIDGE_OPTIONS

#   [top-level] (internal): run command-line interface for development (continuous file watching)
run:dev
    concurrently -p "[{name}]" -n "build,run-cli,run-bridge" -c "blue,red,red" \
        "npm start build:dev:watch" \
        "npm start run:dev:watch-cli" \
        "npm start run:dev:watch-bridge"

#   [top-level] run command-line interface in batch conversion mode
rundown-cmd
    node --no-warnings rundown-5-cli/dst-stage2/rundown.js \
        -o rundown-1-doc/rundown-template.html rundown-1-doc/rundown-template.docx

#   [top-level] run command-line interface in web display mode
rundown-web
    cross-env \
        RUNDOWN_OPTIONS="-v info -a 127.0.0.1 -p 8888 -m web rundown-1-doc" \
        RUNDOWN_BRIDGE_OPTIONS="-v info -r ws://127.0.0.1:8888/events -p ppt:prefix=ppt,connect=udp://10.1.0.15:35551,listen=udp://10.1.0.14:35550" \
        npm start run:dev

#   [top-level] run command-line interface in web user interface mode
rundown-web-ui
    cross-env RUNDOWN_OPTIONS="-v info -a 127.0.0.1 -p 8888 -m web-ui" \
        npm start run:dev

#   [top-level] package components for delivery
package
    npm --prefix rundown-5-cli start package && \
    npm --prefix rundown-6-brd start package && \
    npm --prefix rundown-7-dst start package

#   [top-level] publish components
publish
    npm --prefix rundown-7-dst start publish

#   [top-level] remove all generated artifacts (reverse of "npm start build")
clean
    npm --prefix rundown-2-rnd start clean && \
    npm --prefix rundown-3-lib start clean && \
    npm --prefix rundown-4-web start clean && \
    npm --prefix rundown-5-cli start clean && \
    npm --prefix rundown-6-brd start clean && \
    npm --prefix rundown-7-dst start clean

#   [top-level] remove all generated artifacts (reverse of "npm install" and "npm start build")
clean:dist
    npm --prefix rundown-2-rnd start clean:dist && \
    npm --prefix rundown-3-lib start clean:dist && \
    npm --prefix rundown-4-web start clean:dist && \
    npm --prefix rundown-5-cli start clean:dist && \
    npm --prefix rundown-6-brd start clean:dist && \
    npm --prefix rundown-7-dst start clean:dist && \
    shx rm -f package-lock.json && \
    shx rm -rf node_modules

