##
##  Rundown - Render Rundown Scripts for Teleprompting
##  Copyright (c) 2023-2025 Dr. Ralf S. Engelschall <rse@engelschall.com>
##  Licensed under GPL 3.0 <https://spdx.org/licenses/GPL-3.0-only>
##

#   (internal): create patch set for NPM dependencies
patch-make
    npm shrinkwrap && \
    patch-package --patch-dir package.d "ws" && \
    shx rm -f npm-shrinkwrap.json

#   (internal): apply patch set for NPM dependencies
patch-apply
    patch-package --patch-dir package.d

#   static code analysis (continuous file watching)
lint-watch
    nodemon --exec "npm start lint" --watch src --ext ts

#   static code analysis
lint
    eslint --config etc/eslint.mjs src/**/*.ts && \
    markdownlint-cli2 --config etc/.markdownlint.yaml src/**/*.md

#   build components for production (continuous file watching)
build-watch
    nodemon --exec "npm start build" --watch src --ext ts,1

#   build components for production
build : build:cmd build:man

#   build command for production
build:cmd
    vite --config etc/vite.mts build --mode production

#   build manual page for production
build:man
    shx mkdir -p dst-stage3 && \
    remark --quiet --use remark-man --output dst-stage3/rundown.1 src/rundown.md

#   build all-in-one packages
package [hostname=en4.*]
    cd dst-stage2 && \
    shx rm -f rundown-5-cli-* && \
    targets="node24-linux-x64,node24-linux-arm64"
    targets="$targets,node24-win-x64,node24-win-arm64"
    targets="$targets,node24-macos-x64,node24-macos-arm64"
    pkg --sea --public -c ../package.json -t "$targets" rundown.js && \
    shx mkdir -p ../dst-stage3 && \
    shx mv rundown-5-cli-linux-x64     ../dst-stage3/rundown-cli-lnx-x64     && \
    shx mv rundown-5-cli-linux-arm64   ../dst-stage3/rundown-cli-lnx-a64     && \
    shx mv rundown-5-cli-win-x64.exe   ../dst-stage3/rundown-cli-win-x64.exe && \
    shx mv rundown-5-cli-win-arm64.exe ../dst-stage3/rundown-cli-win-a64.exe && \
    shx mv rundown-5-cli-macos-x64     ../dst-stage3/rundown-cli-mac-x64     && \
    shx mv rundown-5-cli-macos-arm64   ../dst-stage3/rundown-cli-mac-a64

#   remove all generated artifacts (reverse of "npm start build")
clean
    shx rm -rf dst-stage1 dst-stage2 dst-stage3

#   remove all generated artifacts (reverse of "npm install" and "npm start build")
clean:dist : clean
    shx rm -f package-lock.json && \
    shx rm -rf node_modules

